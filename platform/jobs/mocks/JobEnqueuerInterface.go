// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	work "github.com/gocraft/work"
	mock "github.com/stretchr/testify/mock"
)

// JobEnqueuerInterface is an autogenerated mock type for the JobEnqueuerInterface type
type JobEnqueuerInterface struct {
	mock.Mock
}

// Enqueue provides a mock function with given fields: jobName, payload
func (_m *JobEnqueuerInterface) Enqueue(jobName string, payload map[string]interface{}) (*work.Job, error) {
	ret := _m.Called(jobName, payload)

	var r0 *work.Job
	var r1 error
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) (*work.Job, error)); ok {
		return rf(jobName, payload)
	}
	if rf, ok := ret.Get(0).(func(string, map[string]interface{}) *work.Job); ok {
		r0 = rf(jobName, payload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*work.Job)
		}
	}

	if rf, ok := ret.Get(1).(func(string, map[string]interface{}) error); ok {
		r1 = rf(jobName, payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewJobEnqueuerInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewJobEnqueuerInterface creates a new instance of JobEnqueuerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewJobEnqueuerInterface(t mockConstructorTestingTNewJobEnqueuerInterface) *JobEnqueuerInterface {
	mock := &JobEnqueuerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
